<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="zust.competition.sys.dao.TeamDao">
<!--    <resultMap id="BaseResultMap" type="com.info.competition.model.Team">-->
<!--        <result column="id" jdbcType="INTEGER" property="id"/>-->
<!--        <result column="cp_id" jdbcType="INTEGER" property="cpId"/>-->
<!--        <result column="team_name" jdbcType="VARCHAR" property="teamName"/>-->
<!--        <result column="lead_id" jdbcType="INTEGER" property="leaderId"/>-->
<!--        <result column="team_intro" jdbcType="VARCHAR" property="teamIntro"/>-->
<!--        <result column="member" jdbcType="VARCHAR" property="member"/>-->
<!--    </resultMap>-->
    <select id="academyList" resultType="Academy" >
        SELECT *
        from academy
    </select>

    <insert id="insertUserTeam" parameterType="UserTeam"  useGeneratedKeys="true" keyProperty="id">
        insert into user_team (student_id,team_id,`role`,operator_id)
        values (#{studentId},#{teamId},#{role},#{operatorId})
    </insert>

    <insert id="insertMessage" parameterType="Message"  useGeneratedKeys="true" keyProperty="id">
        insert into message (send_id,receive_id,content,operator_id,jump_type)
        values (#{sendId},#{receiveId},#{content},#{operatorId},#{jumpType})
    </insert>

    <select id="getTeamByTime" resultType="Team">
        select *
        from team
        where is_awarded=#{isAwarded} and and is_delete=0
        ORDER BY update_time DESC
    </select>

    <select id="countByAcademy" resultType="CountQuery" parameterType="CountQuery">
        SELECT academy.name as `academy`,count(*) as `count`
        from academy LEFT JOIN
        (SELECT user.* from team LEFT JOIN `user` ON leader_id=`user`.id WHERE team.is_delete=0
            <where>
            is_delete = 0
            <if test="isWin != null">
                AND is_win = #{isWin}
            </if>
            </where>
            ) u
            on academy.id=u.academy
        GROUP BY academy.name
    </select>



    <select id="getTeamByAcademy" resultType="Team">
        select *
        from team
        WHERE is_delete=0 AND is_awarded=1 AND
        leader_id IN
        (select `user`.id
        from `user` LEFT JOIN academy ON `user`.academy=academy.`name`
        WHERE academy.id=#{id})
    </select>

    <sql id="Base_Column_List">
        id,cp_id,`team_name`,leader_id,`team_intro`,`member`
    </sql>


    <insert id="insertTeam" parameterType="Team"  useGeneratedKeys="true" keyProperty="id">
        insert into team
            (team_name,introduction,cp_id,leader_id,invitation_code,create_time,operator_id)
        values
               (#{teamName},#{introduction},#{cpId},#{leaderId},#{invitationCode},now(),#{operatorId})
    </insert>

    <insert id="insertTeamTeacher" parameterType="TeamTeacher"  useGeneratedKeys="true" keyProperty="id">
        insert into team_teacher (team_id,teacher_id,operator_id)
        values (#{teamId},#{teacherId},#{operatorId})
    </insert>

    <select id="getTeam" parameterType="TeamQuery" resultType="Team">
        SELECT *
        FROM team
        <where>
            is_delete = 0
            <if test="teamId != null">
                AND id = #{teamId}
            </if>
            <if test="leaderId != null">
                AND leader_id = #{leaderId}
            </if>
            <if test="cpId != null">
                AND cp_id = #{cpId}
            </if>
            <if test="invitationCode != null and invitationCode != ''">
                AND invitation_code = #{invitationCode}
            </if>
        </where>
    </select>

    <select id="getMember" resultType="UserTeam">
        select user_team.*
        from user_team
                 LEFT JOIN team on team.id=team_id WHERE team_id=#{id}
    </select>


    <select id="myJoin" resultType="Team">
        select team.*
        from user_team
                 LEFT JOIN team on team.id=team_id WHERE student_id=#{id}
    </select>


    <select id="selectTeamList" resultType="TeamDto" parameterType="Query">
        select *
        from team t LEFT JOIN user u on u.id = t.leader_id
            LEFT JOIN competition c on t.cp_id= c.id
        <where>
            <if test="cpId != null">
                t.cp_id = #{cpId}
            </if>
            <if test="leaderId != null">
                AND t.leader_id = #{leaderId}
            </if>
            <if test="is_awarded != null">
                AND is_awarded = #{isAwarded}
            </if>
            <if test="keyword != null and keyword != ''">
                <bind name="_keyword" value="'%' + keyword + '%'"/>
                AND (t.team_name LIKE #{_keyword} or c.title LIKE #{_keyword} or u.number LIKE #{_keyword} or u.name LIKE #{_keyword})
            </if>
            AND t.is_delete = 0
        </where>
    </select>

    <select id="getMyTeamByCpId" parameterType="int" resultType="team">
        SELECT team.*
        FROM user_team LEFT JOIN team ON team.id = team_id
        WHERE user_team.student_id = #{userId} AND team.cp_id = #{cpId}
          AND team.is_delete = 0
    </select>




    <select id="ownLead" resultType="Team">
        SELECT *
        from team
        WHERE leader_id=#{id}
    </select>

    <update id="updateTeam" parameterType="Team">
        update team
        <set>
            <if test="teamName != null">
                `team_name` = #{teamName},
            </if>
            <if test="leaderId != null">
                `leader_id` = #{leaderId},
            </if>
            <if test="introduction != null">
                `introduction` = #{introduction},
            </if>
            <if test="is_awarded != null">
                `is_awarded` = #{isAwarded},
            </if>
            <if test="is_win != null">
                `is_win` = #{isWin},
            </if>
            <if test="result != null">
                `result` = #{result},
            </if>
        </set>
        where id = #{id}
    </update>

    <select id="selectTeamById" resultType="TeamDto">
        select t.*, c.title as cpName, u.name as leaderName
        from team t LEFT JOIN user u on u.id = t.leader_id
                    LEFT JOIN competition c on t.cp_id= c.id
        where t.id = #{id}
        AND t.is_delete = 0
    </select>

    <select id="ownRequest" resultType="UserTeam">
        SELECT *
        FROM user_team
        WHERE student_id=#{id} AND is_delete=0
    </select>

    <select id="requestTeam" resultType="UserTeam">
        SELECT *
        FROM user_team LEFT JOIN team ON team.id=team_id
        WHERE leader_id=#{id}
    </select>

    <delete id="deleteUserTeamByTeamId" parameterType="int">
        delete from user_team
        where team_id = #{teamId}
    </delete>

    <delete id="deleteTeam" parameterType="int">
        delete from team
        where id = #{id}
    </delete>

</mapper>